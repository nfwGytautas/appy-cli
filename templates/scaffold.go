package templates

const AppyYaml = //
`version: {{.Version}}
project: {{.ProjectName}}
type: {{.Type}}
module: {{.Module}}
`

const MainGo = //
`package main

// Auto-generated by appy don't modify by hand, changes will be lost

func main() {
	connectDomains()
}
`

const WiringGo = //
`package main

func connectDomains() {
	// Connect your domains here
}
`

const GoMod = //
`module {{.Module}}

go 1.23

require github.com/nfwGytautas/appy-go v0.1.0
`

const ReadmeMd = //
`# {{.ProjectName}}

## Changelog

### 0.1.0 [xxxx/xx/xxx]

#### Changes

- TODO

#### Bugfixes

- N/A
`

const Dockerfile = //
`FROM golang:1.23 as build
WORKDIR /app
COPY . .
RUN go build -o /server .

FROM scratch
COPY --from=build /server /server
EXPOSE 3000
CMD ["/server"]
`

const Gitignore = //
`# Go
bin/
build/
dist/
`

const VscodeSnippets = //
`{
	"Changelog": {
        "prefix": "changelog",
		"scope": "Markdown",
        "body": [
            "### ${1:0.0.0} [${CURRENT_YEAR}/${CURRENT_MONTH}/${CURRENT_DATE}]",
            "",
            "#### Changes",
            "",
            "- ${2:Feature}",
            "",
            "#### Bugfixes",
            "",
            "- ${3:N/A}"
        ],
        "description": "Create a changelog entry"
    }
}
`

const GithubBuildYaml = //
`name: Build binary

on:
  pull_request:
    branches:
		- main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
	  	with:
			submodules: true
			token: {{"${{ secrets.GITHUB_TOKEN }}"}}

	  - uses: actions/setup-go@v4
		with:
			go-version: 1.23

	  - run: go build -o /{{.ProjectName}} .

	  - uses: actions/upload-artifact@v4
		with:
			name: {{.ProjectName}}
			path: /{{.ProjectName}}
`

const ErrorsGo = //
`package shared

// Define your program errors here

import "errors"

type Error struct {
	Code string
}

// e.g.
var (
	ErrNotFound = errors.New("not found")
)
`
